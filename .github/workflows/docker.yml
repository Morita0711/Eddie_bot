name: Publish Docker image and deploy
on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: npm install and build
        run: |
          npm ci
          npm run build
      - uses: actions/upload-artifact@main
        with:
          name: artifacts
          path: prod/
  push_to_registry:
    name: Push Docker image to GitHub Packages
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: check out the repo
        uses: actions/checkout@v2
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - name: version dockerfile
        run: sed -i 's/v0.0.0/v${{ steps.package-version.outputs.current-version}}/g' Dockerfile
      - name: set up Docker builder
        uses: docker/setup-buildx-action@v1
      - name: log into GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: push to Github Container Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/eddiehubcommunity/eddiebot:v${{ steps.package-version.outputs.current-version}}
            ghcr.io/eddiehubcommunity/eddiebot:latest
  # deploy:
  #   name: deploy to kube cluster
  #   needs: push_to_registry
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: check out the repo
  #       uses: actions/checkout@v2
  #     - name: get-npm-version
  #       id: package-version
  #       uses: martinbeentjes/npm-get-version-action@master
  #     - uses: Azure/k8s-set-context@v1
  #       with:
  #         kubeconfig: ${{ secrets.KUBE_CONFIG }}
  #     - uses: Azure/k8s-deploy@v1.4
  #       with:
  #         namespace: 'default'
  #         manifests: kubernetes/deployment.yaml
  #         images: 'ghcr.io/eddiehubcommunity/eddiebot:v${{ steps.package-version.outputs.current-version}}'
  #         kubectl-version: 'latest'
